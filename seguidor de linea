//Codigo de seguidor de linea para la competencia RoboRave 2018
//Hecho por Leonardo Torres

#include <DCMotor.h>
#include <Servo.h>
#include "Infrarrojo.h" 

int led1 = 14;
int led2 = 15;

Infrarrojo infraInterIzq (13, 400);
Infrarrojo infraInterDer (11, 350);
Infrarrojo infraExterIzq (8, 180);
Infrarrojo infraExterDer (9, 180);

DCMotor motor_der (4, 17, 16); 
DCMotor motor_izq (5, 30, 41); 


bool interIzq = true;//variable para la interseccion. True para izquierda y False para derecha

int boton = 27;
int sensor_choque = 20;
int sensor_choque2 = 21;

// PID
float errorActual;
float errorViejo;
float deri;
float integral;

float kp = 0.45;
float kd = 0;
float ki = 0;
float pid;
//float pid_i, pid_d;


// FIN PID
Servo puerta; 
Servo mezclador;

void giro_izquierda() //funcion utilizada para la interseccion izquierda (primera interseccion)
{ 
  motor_izq.setSpeed(0); 
  motor_der.setSpeed(0);
  delay(400);
  motor_izq.setSpeed(48); 
  motor_der.setSpeed(50);
  delay(200);
  while (!infraInterIzq.lee_blanco() && !infraInterDer.lee_blanco() && !infraExterIzq.lee_blanco() && !infraExterDer.lee_blanco());
  
 
  motor_izq.setSpeed(-50); 
  motor_der.setSpeed(56); 
  delay (200);
  while (infraInterIzq.lee_blanco()); //la funcion se termina en el momento que el sensor interno izquierdo deje de leer blanco
}

void giro_derecha() { //funcion utilizada para la interseccion derecha (segunda interseccion)
  motor_izq.setSpeed(56);
  motor_der.setSpeed(-52);
  delay(500);
  while (infraInterIzq.lee_negro());
  while (infraInterIzq.lee_blanco());
}

void interseccion() { //en el momento que los dos sensores externos vean negro se llama esta funcion
  if (interIzq == true){ //en el caso que la variable interIzq sea TRUE el robot realizara la interseccion izquierda, osea la primera
    giro_izquierda();
    //timeInit = millis();
  }  
  else if (interIzq == false){ //en el caso que la variable interIzq sea FALSE el robot realizara la interseccion derecha, osea la segunda 
    giro_derecha ();
  }
  interIzq = !interIzq; 
}

void giro_atras () //funcion para que el robot de la vuelta
{
   motor_izq.setSpeed (0); 
   motor_der.setSpeed (0); 
   puerta.write (167); // el robot se detiene abre la puerta por 1300 milisegundos
   delay(1300); 
   puerta.write(80); 
   delay(700);
   motor_izq.setSpeed (-30);
   motor_der.setSpeed (-30);
   delay (500); // el robot cierrra la puerta y retrocede por 600 milisegundos
   motor_izq.setSpeed(-45); //valor original 60 
   motor_der.setSpeed(53); //valor original 60
   while (infraInterIzq.lee_blanco()); //el robot realizara un giro sobre su mismo eje hasta que el sensor interno izquierdo deje de leer blanco y luego vuelve a seguidor
   while (infraExterIzq.lee_negro());
  }

void descargar_pelotitas() //funcion para descargar pelotitas
{
  motor_izq.setSpeed(0); //el robot se detiene
  motor_der.setSpeed(0);
  delay(500);
  puerta.write(167); //la puerta de la caja se abre
  while (true) { //este while permite el movimiento del mezclador interno de la caja, que se detiene solo cuando se apaga el robot
    for (int i = 0 ;i <= 180; i++){
      mezclador.write(i);
      }
    for (int a = 180;a >= 0;a--){
      mezclador.write(a);
    
      }
      
    }
 
  }
void fPID(){
  errorViejo = errorActual;
  if ((infraExterIzq.lee_negro() && interIzq )  ||(  infraExterDer.lee_negro() && !interIzq) )   { //cuando cualquiera de los dos infrarojos externos lean negro llama a la funcion interseccion
    interseccion();
  }
  else if (digitalRead(sensor_choque) == LOW || digitalRead(sensor_choque2) == LOW) { 
    if  (digitalRead(boton) == LOW) { //en el caso que se oulse cualquiera de los sensores de choque y el boton este en LOW, se descargan pelotitas
      descargar_pelotitas();               
    }
    else {
    giro_atras (); //sino que el robot haga el giro y vuelva
   }
  }
  if(infraInterIzq.lee_negro() && infraInterDer.lee_blanco() ){
    digitalWrite (led2, LOW);
    digitalWrite (led1, HIGH);
    errorActual = -infraInterIzq.diff();
  }
  else if (infraInterIzq.lee_blanco() && infraInterDer.lee_negro()){
    digitalWrite (led1, LOW);
    digitalWrite (led2, HIGH);
    errorActual = infraInterDer.diff();
  }
  else if (infraInterIzq.lee_blanco() && infraInterDer.lee_blanco()){
    digitalWrite (led1, LOW);
    digitalWrite (led1, LOW);
    errorActual = 0;
  }
  deri = errorActual - errorViejo;
  integral += errorActual;

  /*pid_i = pid;
  pid_d = -pid;

  if(pid_d < 0){
    pid_d *= 0.75;
  }
  else if(pid_i < 0){
    pid_i *= 0.75;
  }*/
  
  pid = kp * errorActual + kd * deri + ki * integral;
  int vel_der = 50 - pid; //valor original 50
  int vel_izq = 43 + pid;

  
  motor_der.setSpeed(vel_der);
  motor_izq.setSpeed(vel_izq); 
  delay(1);
  
}


void setup() {
  pinMode (led1, OUTPUT);
  pinMode (led2, OUTPUT);
  pinMode (sensor_choque, INPUT);
  pinMode (sensor_choque2, INPUT);
  pinMode (boton,INPUT);
  pinMode(22,OUTPUT);
  puerta.attach(52); 
  mezclador.attach(53);

digitalWrite(22,HIGH);
  puerta.write(80); //se declara en el setup el valor de la puerta cerrada
  while(true){
    fPID();
     
  }
}
void loop() { 
}
